#!/usr/bin/env ruby
# rubocop:disable Metrics/BlockNesting
require './lib/board_game.rb'
require './lib/game_logic.rb'
require './lib/player_info.rb'

instructions = "1.The game is played on a 3x3 grid.\n
2. One player is X, the other is O.\n
3. Player take turns to input a no. between (1-9) to mark one of the empty squares.\n
4. The first player to get 3 marks in a row (up, down, across, or diagonally) is the winner.\n
5. If none of the players win and all 9 squares are filled the game is a draw"

game_ctr = 0
p1 = Player.new
p2 = Player.new

puts "xoxoxoxoxoxo Welcome to the Game of Tic-Tact-Toe  xoxoxoxoxoxo\n\n"
puts "               Game Instructions\n\n"

puts instructions + "\n\n"

puts "\n3x3 Grid\n"
Board.print_board('', '', [], [])

puts "\nWhat the grid may look like when there is a winner\n"
Board.print_board('X', '', [1, 2, 3], [])

puts "\nWhat the grid may look like when there is a draw\n"
Board.print_board('X', 'O', [1, 3, 5, 8], [2, 4, 6, 7, 9])

print "\nWant to play the game (y/n)? = "
want_to_play = gets.chomp.capitalize

while want_to_play == 'Y'

  p1.moves = []
  p2.moves = []
  game_ctr = 0
  flag = 0

  print "\nPlayer 1 write your name = "
  p1.name = gets.chomp.to_s

  while flag.zero?
    print "\n#{p1.name} choose your symbol (O / X) = "
    p1.symbol = gets.chomp.capitalize
    flag = 1 if %w[O X].include?(p1.symbol)
    puts "\nInvalid symbol. Choose again\n" if flag.zero?
  end

  print "\nPlayer 2 write your name = "
  p2.name = gets.chomp.to_s

  p2.symbol = p1.symbol == 'X' ? 'O' : 'X'
  puts "\n#{p2.name} your symbol is = " + p2.symbol

  while game_ctr < 5
    flag = 0
    while flag.zero?
      print "\n#{p1.name}-#{p1.symbol} make your move = "
      p1_move = gets.chomp

      if Game.validmove(p1_move.to_i, p1.moves, p2.moves)
        flag = 1
      else
        puts "\nThat was an Invalid Move. Input move again\n"
      end

    end

    p1.moves.push(p1_move.to_i)

    Board.print_board(p1.symbol, p2.symbol, p1.moves, p2.moves)

    if Game.checkwin(p1_move.to_i, p1.moves)
      puts "\n#{p1.name} CONGRATULATIONS!!! you are the WINNER\n"
      break
    end

    if game_ctr == 4
      puts "\nThe game is a draw and no one wins\n"
      break
    end

    flag = 0
    while flag.zero?
      print "\n#{p2.name}-#{p2.symbol} make your move = "
      p2_move = gets.chomp
      if Game.validmove(p2_move.to_i, p1.moves, p2.moves)
        flag = 1
      else
        puts "\nThat was an Invalid Move. Input move again\n"
      end
    end

    p2.moves.push(p2_move.to_i)

    Board.print_board(p1.symbol, p2.symbol, p1.moves, p2.moves)

    if Game.checkwin(p2_move.to_i, p2.moves)
      puts "\n#{p2.name} CONGRATULATIONS!!! you are the WINNER\n"
      break
    end

    game_ctr += 1

  end
  print "\nWant to play again (y/n)? = "
  want_to_play = gets.chomp.capitalize

end

puts "\n \nThank you for playing the Game"

# rubocop:enable Metrics/BlockNesting
